@page "/Client/MiscItems/{id:int}"
@using CoffeeShopNew.Components.Layout
@using CoffeeShopNew.Models
@using CoffeeShopNew.Services.ServiceInterfaces
@layout ClientLayout

@inject IMiscItemService MiscItemService

<PageTitle>Accessories</PageTitle>

<div class="row my-lg-3 d-flex flex-row justify-content-center">
    @if (_miscItem == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <h3 class="my-5 text-center">@_miscItem.Name</h3>
        <div class="card mb-3" style="max-width: 42rem;">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@("/" + _miscItem.Image?.Path)" class="img-fluid rounded-start" alt="@_miscItem.Name">
                </div>
                <div class="col-md-8">
                    <div class="card-body text-center">
                        <h5 class="card-title"><strong>@_miscItem.Price â‚¬</strong></h5>
                        <p class="card-text">@_miscItem.Description</p>
                        <a class="btn btn-primary" href="#" role="button">Buy</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] 
    public int id { get; set; }

    private MiscItem? _miscItem;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _miscItem = await MiscItemService.GetItemById(id);
            if (_miscItem == null)
                Console.WriteLine("Accessory not found.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching accessory: {ex.Message}");
        }
    }
}